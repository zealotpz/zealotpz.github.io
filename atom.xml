<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>木上贝的Blog</title>
  <icon>https://www.gravatar.com/avatar/92f811822e62d360f0ca4faa45ef3db5</icon>
  <subtitle>那照片里的人，瞳孔曾住着我</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="zealotpz.com/"/>
  <updated>2018-12-05T01:47:00.131Z</updated>
  <id>zealotpz.com/</id>
  
  <author>
    <name>木上贝</name>
    <email>zealothz@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>nginx常用配置</title>
    <link href="zealotpz.com/2018/12/04/nginx%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE/"/>
    <id>zealotpz.com/2018/12/04/nginx常用配置/</id>
    <published>2018-12-04T06:07:03.000Z</published>
    <updated>2018-12-05T01:47:00.131Z</updated>
    
    <content type="html"><![CDATA[<p>centos 7,通过 yum 安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nginx <span class="comment"># 启动</span></span><br><span class="line">nginx -s reload <span class="comment">#平滑重启</span></span><br><span class="line">/etc/nginx/nginx.conf <span class="comment">#配置文件</span></span><br></pre></td></tr></table></figure><h4 id="nginx-conf配置文件详解"><a href="#nginx-conf配置文件详解" class="headerlink" title="nginx.conf配置文件详解"></a>nginx.conf配置文件详解</h4><p>大致的分块下，基本就分为以下几块：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">main</span><br><span class="line">events   &#123;</span><br><span class="line">  ....</span><br><span class="line">&#125;</span><br><span class="line">http        &#123;</span><br><span class="line">  ....</span><br><span class="line">  upstream myproject &#123;</span><br><span class="line">    .....</span><br><span class="line">  &#125;</span><br><span class="line">  server  &#123;</span><br><span class="line">    ....</span><br><span class="line">    location &#123;</span><br><span class="line">        ....</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  server  &#123;</span><br><span class="line">    ....</span><br><span class="line">    location &#123;</span><br><span class="line">        ....</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  ....</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p>nginx配置文件主要分为六个区域：<br><code>main(全局设置)</code>、<code>events(nginx工作模式)</code>、<code>http(http设置)</code>、<br>    <code>sever(主机设置)</code>、<code>location(URL匹配)</code>、<code>upstream(上游服务器设置，主要为反向代理、负载均衡相关配置)</code>。<br>main部分设置的指令将影响其它所有部分的设置；server部分的指令主要用于指定虚拟主机域名、IP和端口；upstream的指令用于设置一系列的后端服务器，设置反向代理及后端服务器的负载均衡；location部分用于匹配网页位置（比如，根目录“/”,“/images”,等等）。他们之间的关系式：server继承main，location继承server；upstream既不会继承指令也不会被继承。它有自己的特殊指令，不需要在其他地方的应用。</p><h4 id="main模块"><a href="#main模块" class="headerlink" title="main模块"></a>main模块</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">user nginx;</span><br><span class="line">worker_processes auto;</span><br><span class="line">worker_rlimit_nofile 15360;</span><br><span class="line">error_log /var/<span class="built_in">log</span>/nginx/error.log;</span><br><span class="line">pid /run/nginx.pid;</span><br></pre></td></tr></table></figure><p><code>user</code> 设置nginx是以什么用户来运行的，默认由nobody账号运行;这个非常重要，确保运行nginx的用户能有权限访问读写网站的文件,否则会报404 not found等错误。<br><code>worker_processes</code>来指定了Nginx要开启的子进程数。每个Nginx进程平均耗费10M~12M内存。根据经验，一般指定1个进程就足够了，如果是多核CPU，建议指定和CPU的数量一样的进程数即可。如果写2，那么就会开启2个子进程，总共3个进程。我这里配置的是 auto<br><code>worker_rlimit_nofile</code>用于指定一个nginx进程可以打开的最多文件描述符数目，这里是15360，需要使用命令“ulimit -n 15360”来设置。<br><code>error_log</code>用来定义全局错误日志文件。日志输出级别有debug、info、notice、warn、error、crit可供选择，其中，debug输出日志最为最详细，而crit输出日志最少。<br><code>pid</code>用来指定进程id的存储文件位置。</p><h4 id="events-模块"><a href="#events-模块" class="headerlink" title="events 模块"></a>events 模块</h4><p>events模块来用指定nginx的工作模式和工作模式及连接数上限，一般是这样：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">events &#123;</span><br><span class="line">    use epoll;</span><br><span class="line">    worker_connections 10240;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>use</code>用来指定Nginx的工作模式。Nginx支持的工作模式有select、poll、kqueue、epoll、rtsig和/dev/poll。其中select和poll都是标准的工作模式，kqueue和epoll是高效的工作模式，不同的是epoll用在Linux平台上，而kqueue用在BSD系统中，因为Mac基于BSD,所以Mac也得用这个模式，对于Linux系统，epoll工作模式是首选。</p><p><code>worker_connections</code>用于定义Nginx每个进程的最大连接数，即接收前端的最大请求数，默认是1024。最大客户端连接数由worker_processes和worker_connections决定，即<code>Max_clients=worker_processes*worker_connections</code>，在作为反向代理时，Max_clients变为：<code>Max_clients = worker_processes * worker_connections/4</code>。<br>进程的最大连接数受Linux系统进程的最大打开文件数限制，在执行操作系统命令“ulimit -n 65536”后worker_connections的设置才能生效。</p><h4 id="http-模块"><a href="#http-模块" class="headerlink" title="http 模块"></a>http 模块</h4><p>http模块可以说是最核心的模块了，它负责HTTP服务器相关属性的配置，它里面的server和upstream子模块，至关重要，等到反向代理和负载均衡以及虚拟目录等。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">http&#123;</span><br><span class="line">    client_max_body_size 50m;</span><br><span class="line">    log_format  main  <span class="string">'$remote_addr - $remote_user [$time_local] "$request" '</span></span><br><span class="line">                      <span class="string">'$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">                      <span class="string">'"$http_user_agent" "$http_x_forwarded_for"'</span></span><br><span class="line">                      <span class="string">'$upstream_addr $upstream_response_time $request_time '</span>;</span><br><span class="line"></span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile            on;</span><br><span class="line">    tcp_nopush          on;</span><br><span class="line">    tcp_nodelay         on;</span><br><span class="line">    keepalive_timeout   120;</span><br><span class="line">    types_hash_max_size 3072;</span><br><span class="line"></span><br><span class="line">    include             /etc/nginx/mime.types;</span><br><span class="line">    default_type        application/octet-stream;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#add gzip</span></span><br><span class="line">    gzip            on;</span><br><span class="line">    gzip_static     on;</span><br><span class="line">    gzip_disable    <span class="string">"MSIE [1-6]\.(?!.*SV1)"</span>;</span><br><span class="line">    gzip_min_length 1k;</span><br><span class="line">    gzip_buffers    2 16k;</span><br><span class="line">    gzip_comp_level 4;</span><br><span class="line">    gzip_types      text/xml text/css application/javascript;</span><br><span class="line">    gzip_proxied    off;</span><br><span class="line">    gzip_vary       on;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Load modular configuration files from the /etc/nginx/conf.d directory.</span></span><br><span class="line">    <span class="comment"># See http://nginx.org/en/docs/ngx_core_module.html#include</span></span><br><span class="line">    <span class="comment"># for more information.</span></span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line"></span><br><span class="line">    upstream myproject &#123;</span><br><span class="line">        .....</span><br><span class="line">    &#125;</span><br><span class="line">    server &#123;</span><br><span class="line">        ....</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>client_max_body_size</code> 50m<br>允许客户端请求的最大单文件字节数。如果有上传较大文件，请设置它的限制值<br><code>include</code> 用来设定文件的mime类型,类型在配置文件目录下的mime.type文件定义，来告诉nginx来识别文件类型。<br><code>default_type</code>设定了默认的类型为二进制流，也就是当文件类型未定义时使用这种方式，例如在没有配置asp 的locate 环境时，Nginx是不予解析的，此时，用浏览器访问asp文件就会出现下载了。<br><code>log_format</code>用于设置日志的格式，和记录哪些参数，这里设置为main，刚好用于access_log来记录这种类型。<br><code>main</code>的类型日志如下：也可以增删部分参数。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">122.224.92.122 - - [04/Dec/2018:09:48:21 +0800] <span class="string">"GET /static/lib/codemirror/lib/codemirror.css HTTP/1.1"</span> 200 2581 <span class="string">"https://openhome.vc-card.com/"</span> <span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko)</span></span><br><span class="line"><span class="string">Chrome/70.0.3538.110 Safari/537.36"</span> <span class="string">"-"</span>- - 0.000</span><br></pre></td></tr></table></figure></p><p><code>access_log</code> 用来纪录每次的访问日志的文件地址，后面的main是日志的格式样式，对应于log_format的main。</p><p><code>sendfile</code>参数用于开启高效文件传输模式。将tcp_nopush和tcp_nodelay两个指令设置为on用于防止网络阻塞。开启高效文件传输模式，sendfile指令指定nginx是否调用sendfile函数来输出文件，减少用户空间到内核空间的上下文切换。对于普通应用设为 on，如果用来进行下载等应用磁盘IO重负载应用，可设置为off，以平衡磁盘与网络I/O处理速度，降低系统的负载。</p><p><code>keepalive_timeout</code>设置客户端连接保持活动的超时时间。在超过这个时间之后，服务器会关闭该连接。</p><p><code>types_hash_max_size</code>影响散列表的冲突率。types_hash_max_size越大，就会消耗更多的内存，但散列key的冲突率会降低，检索速度就更快。types_hash_max_size越小，消耗的内存就越小，但散列key的冲突率可能上升。</p><p><code>gzip on</code> : 开启gzip压缩输出，减少网络传输。<br>gzip_min_length 1k ： 设置允许压缩的页面最小字节数，页面字节数从header头得content-length中进行获取。默认值是20。建议设置成大于1k的字节数，小于1k可能会越压越大。<br>gzip_buffers 4 16k ： 设置系统获取几个单位的缓存用于存储gzip的压缩结果数据流。4 16k代表以16k为单位，安装原始数据大小以16k为单位的4倍申请内存。<br>gzip_http_version 1.0 ： 用于识别 http 协议的版本，早期的浏览器不支持 Gzip 压缩，用户就会看到乱码，所以为了支持前期版本加上了这个选项，如果你用了 Nginx 的反向代理并期望也启用 Gzip 压缩的话，由于末端通信是 http/1.0，故请设置为 1.0。<br>gzip_comp_level 6 ： gzip压缩比，1压缩比最小处理速度最快，9压缩比最大但处理速度最慢(传输快但比较消耗cpu)<br>gzip_types ：匹配mime类型进行压缩，无论是否指定,”text/html”类型总是会被压缩的。<br>gzip_proxied any ： Nginx作为反向代理的时候启用，决定开启或者关闭后端服务器返回的结果是否压缩，匹配的前提是后端服务器必须要返回包含”Via”的 header头。<br>gzip_vary on ： 和http头有关系，会在响应头加个 Vary: Accept-Encoding ，可以让前端的缓存服务器缓存经过gzip压缩的页面，例如，用Squid缓存经过Nginx压缩的数据。</p><h4 id="server-模块"><a href="#server-模块" class="headerlink" title="server 模块"></a>server 模块</h4><p>sever 模块是http的子模块，它用来定一个虚拟主机，我们先讲最基本的配置，这些在后面再讲。</p><p>我们看一下一个简单的server 是如何做的？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen       443;</span><br><span class="line">        server_name  localhost localhost www.zealotpz.com;</span><br><span class="line"></span><br><span class="line">        ssl on;</span><br><span class="line">        ssl_certificate      /etc/nginx/xxxx.pem;</span><br><span class="line">        ssl_certificate_key  /etc/nginx/xxxx.key;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /Data/xxxx-ui;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location /admin &#123;</span><br><span class="line">             proxy_pass http://location_admin_gateway/;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location /files &#123;</span><br><span class="line">             proxy_pass http://location_files/;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location /xxxx.gateway.do &#123;</span><br><span class="line">          proxy_pass http://location_gateway/;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ....</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>server</code>标志定义虚拟主机开始。<br><code>listen</code>用于指定虚拟主机的服务端口。<br><code>server_name</code>用来指定IP地址或者域名，多个域名之间用空格分开。<br><code>ssl on</code>启用ssl加密<br><code>ssl_certificate</code>    配置证书位置<br><code>ssl_certificate_key</code>  配置秘钥位置</p><h4 id="location-模块"><a href="#location-模块" class="headerlink" title="location 模块"></a>location 模块</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">            root   /Data/xxxx-ui;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p><code>location /</code> 表示匹配访问根目录。<br><code>root</code>指令用于指定访问根目录时，虚拟主机的web目录，这个目录可以是相对路径（相对路径是相对于nginx的安装目录）。也可以是绝对路径。<br><code>index</code>用于设定我们只输入域名后访问的默认首页地址，有个先后顺序：index.php index.html index.htm，如果没有开启目录浏览权限，又找不到这些默认首页，就会报403错误。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">location /admin &#123;</span><br><span class="line">             proxy_pass http://location_admin_gateway/;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">upstream location_admin_gateway &#123;</span><br><span class="line">   server 127.0.0.1:8080 weight=5;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>proxy_pass</code> http:/backend<br>请求转向backend定义的服务器列表，即反向代理，对应<code>upstream</code>负载均衡器。也可以proxy_pass <a href="http://ip:port。" target="_blank" rel="noopener">http://ip:port。</a></p><h4 id="upstream-模块"><a href="#upstream-模块" class="headerlink" title="upstream 模块"></a>upstream 模块</h4><p>upstream模块 负责负载均衡模块，通过一个简单的调度算法来实现客户端IP到后端服务器的负载均衡</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">upstream location_admin_gateway &#123;</span><br><span class="line">   server 127.0.0.1:8080 weight=5;</span><br><span class="line">&#125;</span><br><span class="line">``` </span><br><span class="line">Nginx的负载均衡模块目前支持4种调度算法:</span><br><span class="line"></span><br><span class="line">1. `weight` 轮询（默认）。每个请求按时间顺序逐一分配到不同的后端服务器，如果后端某台服务器宕机，故障系统被自动剔除，使用户访问不受影响。weight。指定轮询权值，weight值越大，分配到的访问机率越高，主要用于后端每个服务器性能不均的情况下。</span><br><span class="line">2. `ip_hash`。每个请求按访问IP的<span class="built_in">hash</span>结果分配，这样来自同一个IP的访客固定访问一个后端服务器，有效解决了动态网页存在的session共享问题。</span><br><span class="line">3. `fair`。比上面两个更加智能的负载均衡算法。此种算法可以依据页面大小和加载时间长短智能地进行负载均衡，也就是根据后端服务器的响应时间来分配请求，响应时间短的优先分配。Nginx本身是不支持fair的，如果需要使用这种调度算法，必须下载Nginx的upstream_fair模块。</span><br><span class="line">4. `url_hash`。按访问url的<span class="built_in">hash</span>结果来分配请求，使每个url定向到同一个后端服务器，可以进一步提高后端缓存服务器的效率。Nginx本身是不支持url_hash的，如果需要使用这种调度算法，必须安装Nginx 的<span class="built_in">hash</span>软件包。</span><br><span class="line">在HTTP Upstream模块中，可以通过server指令指定后端服务器的IP地址和端口，同时还可以设定每个后端服务器在负载均衡调度中的状态。常用的状态有：</span><br><span class="line"></span><br><span class="line">- `down`，表示当前的server暂时不参与负载均衡。</span><br><span class="line">- `backup`，预留的备份机器。当其他所有的非backup机器出现故障或者忙的时候，才会请求backup机器，因此这台机器的压力最轻。</span><br><span class="line">- `max_fails`，允许请求失败的次数，默认为1。当超过最大次数时，返回proxy_next_upstream 模块定义的错误。</span><br><span class="line">- `fail_timeout`，在经历了max_fails次失败后，暂停服务的时间。max_fails可以和fail_timeout一起使用。</span><br><span class="line">注意 当负载调度算法为ip_hash时，后端服务器在负载均衡调度中的状态不能是weight和backup。</span><br><span class="line"></span><br><span class="line"><span class="comment">#### nginx 常用命令</span></span><br><span class="line">平滑重启命令：</span><br><span class="line"><span class="built_in">kill</span> -HUP 住进称号或进程号文件路径</span><br><span class="line">或者使用</span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line">/usr/nginx/sbin/nginx -s reload</span><br></pre></td></tr></table></figure><p>注意，修改了配置文件后最好先检查一下修改过的配置文件是否正 确，以免重启后Nginx出现错误影响服务器稳定运行。</p><p>判断Nginx配置是否正确命令如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -t -c /usr/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure></p><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/nginx/sbin/nginx -t</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx  reload重启</span><br></pre></td></tr></table></figure><p>参考文章:<br><a href="http://seanlook.com/2015/05/17/nginx-install-and-config/" target="_blank" rel="noopener">http://seanlook.com/2015/05/17/nginx-install-and-config/</a><br><a href="https://www.zybuluo.com/phper/note/89391" target="_blank" rel="noopener">https://www.zybuluo.com/phper/note/89391</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;centos 7,通过 yum 安装：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;nginx &lt;span class=&quot;comment&quot;&gt;# 启动&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nginx -s reload &lt;span class=&quot;comment&quot;&gt;#平滑重启&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/etc/nginx/nginx.conf &lt;span class=&quot;comment&quot;&gt;#配置文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;nginx-conf配置文件详解&quot;&gt;&lt;a href=&quot;#nginx-conf配置文件详解&quot; class=&quot;headerlink&quot; title=&quot;nginx.conf配置文件详解&quot;&gt;&lt;/a&gt;nginx.conf配置文件详解&lt;/h4&gt;&lt;p&gt;大致的分块下，基本就分为以下几块：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;events   &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;http        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  upstream myproject &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  server  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    location &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  server  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    location &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Spring集成junit4报错</title>
    <link href="zealotpz.com/2018/03/07/Spring%E9%9B%86%E6%88%90junit4%E6%8A%A5%E9%94%99/"/>
    <id>zealotpz.com/2018/03/07/Spring集成junit4报错/</id>
    <published>2018-03-07T10:17:28.000Z</published>
    <updated>2018-03-07T10:22:41.345Z</updated>
    
    <content type="html"><![CDATA[<p>Spring 项目集成junit4测试时报错,原因为<code>spring-test</code><br>要和spring项目(spring-core,spring-context)的版本号一致(如 4.3.10.RELEASE)，否则会以下报错:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">java.lang.IllegalStateException: Could not load TestContextBootstrapper [<span class="keyword">null</span>]. Specify <span class="meta">@BootstrapWith</span><span class="string">'s '</span>value<span class="string">' attribute or make the default bootstrapper class available.</span></span><br><span class="line"><span class="string">at org.springframework.test.context.BootstrapUtils.resolveTestContextBootstrapper(BootstrapUtils.java:145)</span></span><br><span class="line"><span class="string">at org.springframework.test.context.TestContextManager.&lt;init&gt;(TestContextManager.java:120)</span></span><br><span class="line"><span class="string">at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTestContextManager(SpringJUnit4ClassRunner.java:151)</span></span><br><span class="line"><span class="string">at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.&lt;init&gt;(SpringJUnit4ClassRunner.java:142)</span></span><br><span class="line"><span class="string">at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)</span></span><br><span class="line"><span class="string">at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)</span></span><br><span class="line"><span class="string">at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)</span></span><br><span class="line"><span class="string">at java.lang.reflect.Constructor.newInstance(Constructor.java:422)</span></span><br><span class="line"><span class="string">at org.junit.internal.builders.AnnotatedBuilder.buildRunner(AnnotatedBuilder.java:104)</span></span><br><span class="line"><span class="string">at org.junit.internal.builders.AnnotatedBuilder.runnerForClass(AnnotatedBuilder.java:86)</span></span><br><span class="line"><span class="string">at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)</span></span><br><span class="line"><span class="string">at org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:26)</span></span><br><span class="line"><span class="string">at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)</span></span><br><span class="line"><span class="string">at org.junit.internal.requests.ClassRequest.getRunner(ClassRequest.java:33)</span></span><br><span class="line"><span class="string">at org.junit.internal.requests.FilterRequest.getRunner(FilterRequest.java:36)</span></span><br><span class="line"><span class="string">at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:49)</span></span><br><span class="line"><span class="string">at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)</span></span><br><span class="line"><span class="string">at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)</span></span><br><span class="line"><span class="string">at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)</span></span><br><span class="line"><span class="string">Caused by: java.lang.NoSuchMethodError: org.springframework.util.Assert.state(ZLjava/util/function/Supplier;)V</span></span><br><span class="line"><span class="string">at org.springframework.test.context.BootstrapUtils.resolveExplicitTestContextBootstrapper(BootstrapUtils.java:157)</span></span><br><span class="line"><span class="string">at org.springframework.test.context.BootstrapUtils.resolveTestContextBootstrapper(BootstrapUtils.java:128)</span></span><br><span class="line"><span class="string">... 18 more</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Disconnected from the target VM, address: '</span><span class="number">127.0</span>.0.1:<span class="number">53761</span><span class="string">', transport: '</span>socket<span class="string">'</span></span><br></pre></td></tr></table></figure></p><a id="more"></a><p>另外 Junit 的版本过低也会报如下错误,建议升级到<code>4.9</code>版本以上<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">java.lang.ExceptionInInitializerError  </span><br><span class="line">    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)  </span><br><span class="line">    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:<span class="number">57</span>)  </span><br><span class="line">    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:<span class="number">45</span>)  </span><br><span class="line">    at java.lang.reflect.Constructor.newInstance(Constructor.java:<span class="number">526</span>)  </span><br><span class="line">    at org.junit.internal.builders.AnnotatedBuilder.buildRunner(AnnotatedBuilder.java:<span class="number">31</span>)  </span><br><span class="line">    at org.junit.internal.builders.AnnotatedBuilder.runnerForClass(AnnotatedBuilder.java:<span class="number">24</span>)  </span><br><span class="line">    at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:<span class="number">57</span>)  </span><br><span class="line">    at org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:<span class="number">29</span>)  </span><br><span class="line">    at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:<span class="number">57</span>)  </span><br><span class="line">    at org.junit.internal.requests.ClassRequest.getRunner(ClassRequest.java:<span class="number">24</span>)  </span><br><span class="line">    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.&lt;init&gt;(JUnit4TestReference.java:<span class="number">33</span>)  </span><br><span class="line">    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestClassReference.&lt;init&gt;(JUnit4TestClassReference.java:<span class="number">25</span>)  </span><br><span class="line">    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader.createTest(JUnit4TestLoader.java:<span class="number">48</span>)  </span><br><span class="line">    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader.loadTests(JUnit4TestLoader.java:<span class="number">38</span>)  </span><br><span class="line">    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:<span class="number">452</span>)  </span><br><span class="line">    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:<span class="number">683</span>)  </span><br><span class="line">    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:<span class="number">390</span>)  </span><br><span class="line">    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:<span class="number">197</span>)  </span><br><span class="line">Caused by: java.lang.IllegalStateException: Failed to find class [org.junit.runners.model.MultipleFailureException]: SpringJUnit4ClassRunner requires JUnit 4.9 or higher.  </span><br><span class="line">    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.&lt;clinit&gt;(SpringJUnit4ClassRunner.java:<span class="number">102</span>)  </span><br><span class="line">    ... <span class="number">18</span> more</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Spring 项目集成junit4测试时报错,原因为&lt;code&gt;spring-test&lt;/code&gt;&lt;br&gt;要和spring项目(spring-core,spring-context)的版本号一致(如 4.3.10.RELEASE)，否则会以下报错:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;java.lang.IllegalStateException: Could not load TestContextBootstrapper [&lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;]. Specify &lt;span class=&quot;meta&quot;&gt;@BootstrapWith&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39;s &#39;&lt;/span&gt;value&lt;span class=&quot;string&quot;&gt;&#39; attribute or make the default bootstrapper class available.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;	at org.springframework.test.context.BootstrapUtils.resolveTestContextBootstrapper(BootstrapUtils.java:145)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;	at org.springframework.test.context.TestContextManager.&amp;lt;init&amp;gt;(TestContextManager.java:120)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTestContextManager(SpringJUnit4ClassRunner.java:151)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.&amp;lt;init&amp;gt;(SpringJUnit4ClassRunner.java:142)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;	at org.junit.internal.builders.AnnotatedBuilder.buildRunner(AnnotatedBuilder.java:104)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;	at org.junit.internal.builders.AnnotatedBuilder.runnerForClass(AnnotatedBuilder.java:86)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;	at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;	at org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:26)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;	at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;	at org.junit.internal.requests.ClassRequest.getRunner(ClassRequest.java:33)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;	at org.junit.internal.requests.FilterRequest.getRunner(FilterRequest.java:36)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:49)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;Caused by: java.lang.NoSuchMethodError: org.springframework.util.Assert.state(ZLjava/util/function/Supplier;)V&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;	at org.springframework.test.context.BootstrapUtils.resolveExplicitTestContextBootstrapper(BootstrapUtils.java:157)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;	at org.springframework.test.context.BootstrapUtils.resolveTestContextBootstrapper(BootstrapUtils.java:128)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;	... 18 more&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;Disconnected from the target VM, address: &#39;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&quot;number&quot;&gt;53761&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39;, transport: &#39;&lt;/span&gt;socket&lt;span class=&quot;string&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SpringBoot集成activiti,页面需验证用户名密码</title>
    <link href="zealotpz.com/2018/03/05/spring-boot%E9%9B%86%E6%88%90activiti-%E9%A1%B5%E9%9D%A2%E9%9C%80%E9%AA%8C%E8%AF%81%E7%94%A8%E6%88%B7%E5%90%8D%E5%AF%86%E7%A0%81/"/>
    <id>zealotpz.com/2018/03/05/spring-boot集成activiti-页面需验证用户名密码/</id>
    <published>2018-03-05T03:11:31.000Z</published>
    <updated>2018-03-05T03:33:16.258Z</updated>
    
    <content type="html"><![CDATA[<p>SpringBoot集成 activiti moder后访问页面需要验证，验证的是act_id_user用户表表里的数据，可以新增数据，并输入对应的账号密码进入。<br><!-- ![](http://oizl4tpho.bkt.clouddn.com//20180305110917_SMwEse_111111.jpeg) --><br><img src="http://oizl4tpho.bkt.clouddn.com//20180305110917_SMwEse_111111.jpeg" width="50%" height="50%"><br>如果不需要验证可以关闭这个验证。</p><h4 id="原因"><a href="#原因" class="headerlink" title="原因:"></a>原因:</h4><ul><li>SpringBoot会根据引入的Jar包而自动配置相应的功能。 </li><li>ActivitiModeler中引用了Spring Security的Jar<a id="more"></a></li></ul><h4 id="解决"><a href="#解决" class="headerlink" title="解决:"></a>解决:</h4><ol><li><p>修改配置文件 <code>application.yml</code>,增加以下配置:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">security:</span><br><span class="line">  basic:</span><br><span class="line">    enabled: <span class="keyword">false</span></span><br></pre></td></tr></table></figure></li><li><p>SpringBoot 启动类增加注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableAutoConfiguration</span>(exclude = &#123;</span><br><span class="line">    org.activiti.spring.boot.SecurityAutoConfiguration.class</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SpringBoot集成 activiti moder后访问页面需要验证，验证的是act_id_user用户表表里的数据，可以新增数据，并输入对应的账号密码进入。&lt;br&gt;&lt;!-- ![](http://oizl4tpho.bkt.clouddn.com//20180305110917_SMwEse_111111.jpeg) --&gt;&lt;br&gt;&lt;img src=&quot;http://oizl4tpho.bkt.clouddn.com//20180305110917_SMwEse_111111.jpeg&quot; width=&quot;50%&quot; height=&quot;50%&quot;&gt;&lt;br&gt;如果不需要验证可以关闭这个验证。&lt;/p&gt;
&lt;h4 id=&quot;原因&quot;&gt;&lt;a href=&quot;#原因&quot; class=&quot;headerlink&quot; title=&quot;原因:&quot;&gt;&lt;/a&gt;原因:&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;SpringBoot会根据引入的Jar包而自动配置相应的功能。 &lt;/li&gt;
&lt;li&gt;ActivitiModeler中引用了Spring Security的Jar
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>他乡没有变成故乡，故乡却成了他乡</title>
    <link href="zealotpz.com/2018/01/22/%E4%BB%96%E4%B9%A1%E6%B2%A1%E6%9C%89%E5%8F%98%E6%88%90%E6%95%85%E4%B9%A1%EF%BC%8C%E6%95%85%E4%B9%A1%E5%8D%B4%E6%88%90%E4%BA%86%E4%BB%96%E4%B9%A1/"/>
    <id>zealotpz.com/2018/01/22/他乡没有变成故乡，故乡却成了他乡/</id>
    <published>2018-01-22T15:48:39.000Z</published>
    <updated>2018-01-22T16:50:34.264Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>不知道你有没有这样的经历:如果你在一个陌生的地方生活,尤其是在大都市里, 那么任何关于家乡的点滴都会让你格外在意。它可能是在你临出地铁是身后的一句象印,也可能是在小巷深处的一盘家乡美食,也可能什么都不是​。  –&lt;&lt;槽边往事&gt;&gt;<br><a id="more"></a></p></blockquote><p>晚上又一次的失眠前看了<code>趙雷 - 成都 (歌手 THE SINGER 2017)</code>,赵雷说了这么一句话 <strong>总有一些他乡变成故乡</strong> ,成都是他第二个家。但近年来发生的一些事却让我觉得是 他乡没有变成故乡，故乡却成了他乡,已经没什么让我觉得是带不走的了。</p><blockquote><p>时间就是让你觉得走得好慢，可是不经意间又快到让你无法接受。 –&lt;&lt;每个人都是一座孤岛&gt;&gt;</p></blockquote><p>今年应该是第二个不在老家过年的春节了吧。年关将近,朋友同事都在忙着抢票忙着准备回家过年,讽刺的是我在想的却是今年过年该去哪躲一躲,因为某些人、某些事。<code>大家都一样，没有什么不同，一样的孤单，一样的幸福</code>,所以有些故事不必说给每个人听,不必说给你听。或许就应该在某些无眠的夜里,让它们与酒精陪我一起。</p><blockquote><p>“我们就像两个在海边玩耍的孩子，一会儿发现个贝壳，一会儿又发现个贝壳，乐此不疲，哪有时间厌倦？”​</p></blockquote><p>所以所谓新鲜感有那么重要吗?</p><p>–2018/01/23 半夜的胡思乱想</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;不知道你有没有这样的经历:如果你在一个陌生的地方生活,尤其是在大都市里, 那么任何关于家乡的点滴都会让你格外在意。它可能是在你临出地铁是身后的一句象印,也可能是在小巷深处的一盘家乡美食,也可能什么都不是​。  –&amp;lt;&amp;lt;槽边往事&amp;gt;&amp;gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>HostKey值改变后导致SSH连接错误</title>
    <link href="zealotpz.com/2017/11/29/HostKey%E5%80%BC%E6%94%B9%E5%8F%98%E5%90%8E%E5%AF%BC%E8%87%B4SSH%E8%BF%9E%E6%8E%A5%E9%94%99%E8%AF%AF/"/>
    <id>zealotpz.com/2017/11/29/HostKey值改变后导致SSH连接错误/</id>
    <published>2017-11-29T09:41:44.000Z</published>
    <updated>2017-11-29T09:53:12.491Z</updated>
    
    <content type="html"><![CDATA[<p><strong>问题描述</strong><br>公司 Gitlab 地址变更后,更改 MacOS 下 hosts 的值,完成后 pull 项目时发现报错:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">@       WARNING: POSSIBLE DNS SPOOFING DETECTED!          @</span><br><span class="line">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">The RSA host key <span class="keyword">for</span> zhongmakj has changed,</span><br><span class="line">and the key <span class="keyword">for</span> the corresponding IP address 47.97.22.120</span><br><span class="line">is unknown. This could either mean that</span><br><span class="line">DNS SPOOFING is happening or the IP address <span class="keyword">for</span> the host</span><br><span class="line">and its host key have changed at the same time.</span><br><span class="line">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @</span><br><span class="line">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!</span><br><span class="line">Someone could be eavesdropping on you right now (man-in-the-middle attack)!</span><br><span class="line">It is also possible that a host key has just been changed.</span><br><span class="line">The fingerprint <span class="keyword">for</span> the RSA key sent by the remote host is</span><br><span class="line">SHA256:B4rTpw5bAXW+0QAq0IhAGZ/aCQKarOM0p5wEn8kKQCA.</span><br><span class="line">Please contact your system administrator.</span><br><span class="line">Add correct host key <span class="keyword">in</span> /Users/zealotpz/.ssh/known_hosts to get rid of this message.</span><br><span class="line">Offending RSA key <span class="keyword">in</span> /Users/zealotpz/.ssh/known_hosts:29</span><br><span class="line">RSA host key <span class="keyword">for</span> zhongmakj has changed and you have requested strict checking.</span><br><span class="line">Host key verification failed.</span><br><span class="line">fatal: Could not <span class="built_in">read</span> from remote repository.</span><br><span class="line"></span><br><span class="line">Please make sure you have the correct access rights</span><br><span class="line">and the repository exists.</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>查阅后得知,ssh会把你每个你访问过计算机的公钥(public key)都记录在<code>~/.ssh/known_hosts</code>,当下次访问相同计算机时，OpenSSH会核对公钥。如果公钥不同，OpenSSH会发出警告， 避免你受到DNS Hijack之类的攻击。</p><p><strong>有以下两个解决方案：</strong></p><ol><li>手动删除修改<code>known_hsots</code>里面旧的HostKey值记录，下次重新保存新的就行。</li><li>修改配置文件<code>~/.ssh/config</code>，加上这两行，重启服务器。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">StrictHostKeyChecking no</span><br><span class="line">UserKnownHostsFile /dev/null</span><br></pre></td></tr></table></figure></li></ol><p><strong>优缺点：</strong></p><ol><li>需要每次手动删除文件内容，一些自动化脚本的无法运行（在SSH登陆时失败），但是安全性高；</li><li>SSH登陆时会忽略<code>known_hsots</code>的访问，但是安全性低；</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;问题描述&lt;/strong&gt;&lt;br&gt;公司 Gitlab 地址变更后,更改 MacOS 下 hosts 的值,完成后 pull 项目时发现报错:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@       WARNING: POSSIBLE DNS SPOOFING DETECTED!          @&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The RSA host key &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; zhongmakj has changed,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;and the key &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; the corresponding IP address 47.97.22.120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;is unknown. This could either mean that&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DNS SPOOFING is happening or the IP address &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; the host&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;and its host key have changed at the same time.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Someone could be eavesdropping on you right now (man-in-the-middle attack)!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;It is also possible that a host key has just been changed.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The fingerprint &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; the RSA key sent by the remote host is&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SHA256:B4rTpw5bAXW+0QAq0IhAGZ/aCQKarOM0p5wEn8kKQCA.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Please contact your system administrator.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Add correct host key &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; /Users/zealotpz/.ssh/known_hosts to get rid of this message.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Offending RSA key &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; /Users/zealotpz/.ssh/known_hosts:29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RSA host key &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; zhongmakj has changed and you have requested strict checking.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Host key verification failed.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fatal: Could not &lt;span class=&quot;built_in&quot;&gt;read&lt;/span&gt; from remote repository.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Please make sure you have the correct access rights&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;and the repository exists.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CentOS 7 修改时区</title>
    <link href="zealotpz.com/2017/07/19/CentOS-7-%E4%BF%AE%E6%94%B9%E6%97%B6%E5%8C%BA/"/>
    <id>zealotpz.com/2017/07/19/CentOS-7-修改时区/</id>
    <published>2017-07-19T06:51:00.000Z</published>
    <updated>2017-11-29T09:53:20.204Z</updated>
    
    <content type="html"><![CDATA[<h4 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h4><p><strong> GMT、UTC、CST、DST 时间 </strong></p><p>(1) UTC<br>整个地球分为二十四时区，每个时区都有自己的本地时间。在国际无线电通信场合，为了统一起见，使用一个统一的时间，称为通用协调时(UTC, Universal Time Coordinated)。</p><p>(2) GMT<br>格林威治标准时间 (Greenwich Mean Time)指位于英国伦敦郊区的皇家格林尼治天文台的标准时间，因为本初子午线被定义在通过那里的经线。(UTC与GMT时间基本相同，本文中不做区分)</p><p>(3) CST<br>中国标准时间 (China Standard Time)<br><a id="more"></a><br>1<br>GMT + 8 = UTC + 8 = CST</p><p>(4) DST<br>夏令时(Daylight Saving Time) 指在夏天太阳升起的比较早时，将时钟拨快一小时，以提早日光的使用。（中国不使用）</p><p>1.2 硬件时钟和系统时钟</p><p>(1) 硬件时钟<br>RTC(Real-Time Clock)或CMOS时钟，一般在主板上靠电池供电，服务器断电后也会继续运行。仅保存日期时间数值，无法保存时区和夏令时设置。</p><p>(2) 系统时钟<br>一般在服务器启动时复制RTC时间，之后独立运行，保存了时间、时区和夏令时设置。</p><p>在 CentOS 7 中, 引入了一个叫 timedatectl 的设置设置程序.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">dev@localhost ~/ » timedatectl</span><br><span class="line">      Local time: Wed 2017-07-19 14:55:27 CST</span><br><span class="line">  Universal time: Wed 2017-07-19 06:55:27 UTC</span><br><span class="line">        RTC time: Wed 2017-07-19 14:55:28</span><br><span class="line">       Time zone: Asia/Shanghai (CST, +0800)</span><br><span class="line">     NTP enabled: no</span><br><span class="line">NTP synchronized: no</span><br><span class="line"> RTC <span class="keyword">in</span> <span class="built_in">local</span> TZ: yes</span><br><span class="line">      DST active: n/a</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">timedatectl list-timezones <span class="comment"># 列出所有时区</span></span><br><span class="line">timedatectl <span class="built_in">set</span>-local-rtc 1 <span class="comment"># 将硬件时钟调整为与本地时钟一致, 0 为设置为 UTC 时间</span></span><br><span class="line">timedatectl <span class="built_in">set</span>-timezone Asia/Shanghai <span class="comment"># 设置系统时区为上海</span></span><br></pre></td></tr></table></figure><p>其实不考虑各个发行版的差异化, 从更底层出发的话, 修改时间时区比想象中要简单:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;基本概念&quot;&gt;&lt;a href=&quot;#基本概念&quot; class=&quot;headerlink&quot; title=&quot;基本概念&quot;&gt;&lt;/a&gt;基本概念&lt;/h4&gt;&lt;p&gt;&lt;strong&gt; GMT、UTC、CST、DST 时间 &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;(1) UTC&lt;br&gt;整个地球分为二十四时区，每个时区都有自己的本地时间。在国际无线电通信场合，为了统一起见，使用一个统一的时间，称为通用协调时(UTC, Universal Time Coordinated)。&lt;/p&gt;
&lt;p&gt;(2) GMT&lt;br&gt;格林威治标准时间 (Greenwich Mean Time)指位于英国伦敦郊区的皇家格林尼治天文台的标准时间，因为本初子午线被定义在通过那里的经线。(UTC与GMT时间基本相同，本文中不做区分)&lt;/p&gt;
&lt;p&gt;(3) CST&lt;br&gt;中国标准时间 (China Standard Time)&lt;br&gt;
    
    </summary>
    
    
      <category term="CentOS, 时区" scheme="zealotpz.com/tags/CentOS-%E6%97%B6%E5%8C%BA/"/>
    
  </entry>
  
  <entry>
    <title>Java 日志打印</title>
    <link href="zealotpz.com/2017/06/01/Java-%E6%97%A5%E5%BF%97%E6%89%93%E5%8D%B0/"/>
    <id>zealotpz.com/2017/06/01/Java-日志打印/</id>
    <published>2017-06-01T01:44:21.000Z</published>
    <updated>2017-06-01T01:53:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>log4j 中常用的日志打印方式如下:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">logger.info(<span class="string">"请求参数 "</span> + param + <span class="string">",id: '"</span> + id + <span class="string">"'"</span>);</span><br></pre></td></tr></table></figure></p><p>这样写不仅更啰嗦和可读性差，更严重的是字符串拼接影响效率（当这个级别并不需要输出的时候）。slf4j引入了一个{}的注入特性。并且由于避免了每次都进行字符串拼接，toString方法不会被调用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(LogTest.class);</span><br><span class="line"></span><br><span class="line">logger.info(<span class="string">"请求参数: &#123;&#125;"</span>, param);</span><br></pre></td></tr></table></figure><a id="more"></a><p>日志框架和System.out相比有两大优势：分类和级别。两者可以让你可以选择性的过滤日志，永久的或者只是在排查错误的时候.如下表格:</p><table><thead><tr><th>Level</th><th>概述</th></tr></thead><tbody><tr><td>ERROR</td><td>发生了严重的错误，必须马上处理。这种级别的错误是任何系统都无法容忍的。比如：空指针异常，数据库不可用，关键路径的用例无法继续执行。</td></tr><tr><td>WARN</td><td>还会继续执行后面的流程，但应该引起重视。其实在这里我希望有两种级别：一个是存在解决方案的明显的问题（比如，”当前数据不可用，使用缓存数据”），另一个是潜在的问题和建议（比如“程序运行在开发模式下”或者“管理控制台的密码不够安全”）。应用程序可以容忍这些信息，不过它们应该被检查及修复。</td></tr><tr><td>DEBUG</td><td>开发人员关注的事</td></tr><tr><td>TRACE</td><td>更为详尽的信息，只是开发阶段使用。在产品上线之后的一小段时间内你可能还需要关注下这些信息，不过这些日志记录只是临时性的，最终应该关掉。DEBUG和TRACE的区别很难区分，不过如果你加了一行日志，在开发测试完后又删了它的话，这条日志就应该是TRACE级别的。</td></tr></tbody></table><p>关于<code>{}</code>转义：<br>SLF4j仅支持在{后面紧跟}，例如：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">logger.debug(<span class="string">"Set &#123;1,2&#125; differs from &#123;&#125;"</span>, <span class="string">"3"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//将会输出:</span></span><br><span class="line">Set &#123;<span class="number">1</span>,<span class="number">2</span>&#125; differs from <span class="number">3</span></span><br></pre></td></tr></table></figure></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">logger.debug(<span class="string">"Set &#123;1,2&#125; differs from &#123;&#123;&#125;&#125;"</span>, <span class="string">"3"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//将会输出:</span></span><br><span class="line">Set &#123;<span class="number">1</span>,<span class="number">2</span>&#125; differs from &#123;<span class="number">3</span>&#125;</span><br></pre></td></tr></table></figure><p>如果要输出＂{}＂则仅需要在{前面加上转移符”\”，例如：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">logger.debug(<span class="string">"Set \\&#123;&#125; differs from &#123;&#125;"</span>, <span class="string">"3"</span>);</span><br><span class="line"></span><br><span class="line">将会输出:</span><br><span class="line">Set &#123;&#125; differs from <span class="number">3</span></span><br></pre></td></tr></table></figure></p><p>注意在Java中反斜杠需要写作： <code>\\</code>.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;log4j 中常用的日志打印方式如下:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;logger.info(&lt;span class=&quot;string&quot;&gt;&quot;请求参数 &quot;&lt;/span&gt; + param + &lt;span class=&quot;string&quot;&gt;&quot;,id: &#39;&quot;&lt;/span&gt; + id + &lt;span class=&quot;string&quot;&gt;&quot;&#39;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样写不仅更啰嗦和可读性差，更严重的是字符串拼接影响效率（当这个级别并不需要输出的时候）。slf4j引入了一个{}的注入特性。并且由于避免了每次都进行字符串拼接，toString方法不会被调用&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Logger logger = LoggerFactory.getLogger(LogTest.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;logger.info(&lt;span class=&quot;string&quot;&gt;&quot;请求参数: &amp;#123;&amp;#125;&quot;&lt;/span&gt;, param);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="slf4j" scheme="zealotpz.com/tags/slf4j/"/>
    
  </entry>
  
  <entry>
    <title>IDEA 远程调试(Tomcat 与 Springboot)</title>
    <link href="zealotpz.com/2017/05/25/IDEA-%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95Tomcat%20%E4%B8%8E%20Springboot()/"/>
    <id>zealotpz.com/2017/05/25/IDEA-远程调试Tomcat 与 Springboot()/</id>
    <published>2017-05-25T03:11:28.000Z</published>
    <updated>2017-05-25T06:42:19.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="使用Tomcat项目"><a href="#使用Tomcat项目" class="headerlink" title="使用Tomcat项目"></a>使用Tomcat项目</h4><p><strong> 一、IDEA 配置 </strong></p><ol><li>添加远程 <code>Tomcat Server</code>,选择 <code>Remote</code><br><img src="http://oizl4tpho.bkt.clouddn.com//20170525140622_YPKDWi_tomcat1.jpeg" alt=""><a id="more"></a></li><li><p>这里的<code>Remote staging</code>选择的都是<code>same file system</code>，这就要求本地代码和远程Tomcat的代码要一致;<br><img src="http://oizl4tpho.bkt.clouddn.com//20170525140635_fbLnY4_tomcat2.jpeg" alt=""></p></li><li><p><code>9991</code> 这个端口为设置的远程Debug端口<br><img src="http://oizl4tpho.bkt.clouddn.com//20170525141215_IkdUGZ_tomcat3.jpeg" alt=""></p></li></ol><p><strong> 二、远程 Tomcat 配置 </strong></p><ol><li><p>在tomcat/bin下的<code>catalina.sh</code>上边添加下边的一段设置(即<code>IDEA 配置`</code>图3中的配置)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -----------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">CATALINA_OPTS=<span class="string">"-Xdebug -Xrunjdwp:transport=dt_socket,address=9991,suspend=n,server=y"</span></span><br><span class="line"><span class="comment"># OS specific support.  $var _must_ be set to either true or false.</span></span><br></pre></td></tr></table></figure></li><li><p>添加完成后重启 Tomcat 即可,使用 lsof 查看端口使用情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -i:9991</span><br></pre></td></tr></table></figure></li><li><p>启动成功后控制台输出如下:<br><img src="http://oizl4tpho.bkt.clouddn.com//20170525142837_b4LISr_jar3.jpeg" alt=""></p></li></ol><h4 id="使用-Spring-Boot-项目"><a href="#使用-Spring-Boot-项目" class="headerlink" title="使用 Spring Boot 项目"></a>使用 Spring Boot 项目</h4><p><strong> 一、服务器端配置 </strong></p><ol><li>jar文件启动,设置启动debug 端口为<code>9991</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup java -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,<span class="built_in">suspend</span>=n,address=9991 -Dpay.notify.ip=123.11.11.11 -Deureka.hostname=123.22.22.22 -Deureka.instance.post=1111 -jar zealotpz-test-1.0.jar &gt;&gt; /dev/null &amp;</span><br></pre></td></tr></table></figure></li></ol><p><strong> 二、IDEA 配置 </strong></p><ol><li><p>添加配置,选择 <code>Remote</code><br><img src="http://oizl4tpho.bkt.clouddn.com//20170525144203_CnTvgp_1111111111111.jpeg" alt=""></p></li><li><p>Remote 配置,填入远程 jar 启动的 ip 即端口即可,如图之前配置的9991<br><img src="http://oizl4tpho.bkt.clouddn.com//20170525142353_2aWrAz_jar2.jpeg" alt=""></p></li><li><p>启动成功后控制台输出如下:<br><img src="http://oizl4tpho.bkt.clouddn.com//20170525142837_b4LISr_jar3.jpeg" alt=""></p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;使用Tomcat项目&quot;&gt;&lt;a href=&quot;#使用Tomcat项目&quot; class=&quot;headerlink&quot; title=&quot;使用Tomcat项目&quot;&gt;&lt;/a&gt;使用Tomcat项目&lt;/h4&gt;&lt;p&gt;&lt;strong&gt; 一、IDEA 配置 &lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;添加远程 &lt;code&gt;Tomcat Server&lt;/code&gt;,选择 &lt;code&gt;Remote&lt;/code&gt;&lt;br&gt;&lt;img src=&quot;http://oizl4tpho.bkt.clouddn.com//20170525140622_YPKDWi_tomcat1.jpeg&quot; alt=&quot;&quot;&gt;
    
    </summary>
    
    
      <category term="IDEA,debug" scheme="zealotpz.com/tags/IDEA-debug/"/>
    
  </entry>
  
  <entry>
    <title>怎么去拥抱一夏天的风</title>
    <link href="zealotpz.com/2017/04/28/%E6%80%8E%E4%B9%88%E5%8E%BB%E6%8B%A5%E6%8A%B1%E4%B8%80%E5%A4%8F%E5%A4%A9%E7%9A%84%E9%A3%8E/"/>
    <id>zealotpz.com/2017/04/28/怎么去拥抱一夏天的风/</id>
    <published>2017-04-28T07:01:50.000Z</published>
    <updated>2017-07-28T03:09:41.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>怎么去拥有一道彩虹</strong><br><strong>怎么去拥抱一夏天的风</strong><br><a id="more"></a><br><strong>如果我爱上你的笑容</strong><br><strong>要怎么收藏要怎么拥有</strong></p><p><code>太矫情的已删除</code></p><p>有人说,其实感情最忌讳谈“<code>付出感</code>”.<br>付出没有回报，会让人失去勇气。而付出只谈回报，就失去了意义。<br>总觉得自己给对方留了足够的信息，对方应该能明白自己的意思;<br>或许是我太矫情,已陷入这种得不到的付出感</p><p><strong>如果你快乐不是为我</strong><br><strong>会不会放手其实才是拥有</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;怎么去拥有一道彩虹&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;怎么去拥抱一夏天的风&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="琐事,感悟,随笔" scheme="zealotpz.com/tags/%E7%90%90%E4%BA%8B-%E6%84%9F%E6%82%9F-%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>Java double相乘后结果偏差</title>
    <link href="zealotpz.com/2017/03/21/Java-double%E7%9B%B8%E4%B9%98%E5%90%8E%E7%BB%93%E6%9E%9C%E5%81%8F%E5%B7%AE/"/>
    <id>zealotpz.com/2017/03/21/Java-double相乘后结果偏差/</id>
    <published>2017-03-21T06:01:45.000Z</published>
    <updated>2017-03-23T15:19:36.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">double</span> amt = <span class="number">4869.61</span>;</span><br><span class="line">    <span class="keyword">double</span> amt2 = amt * <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">    System.out.println(amt2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果不是预期的<code>486961</code>,而是<code>486960.99999999994</code><br><a id="more"></a></p><p><strong> 解决方案一 : </strong><br><strong> <del>此方法有误 !!!</del> </strong><br><del>100 用 <code>*10*10</code> 替换,10000 用 <code>100*100</code>替换,</del><br>如<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">double</span> amt2 = amt * <span class="number">100</span>;</span><br></pre></td></tr></table></figure></p><p>替换成<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">double</span> amt3 = amt * <span class="number">10</span> * <span class="number">10</span>;</span><br></pre></td></tr></table></figure></p><p><strong> 解决方案二 : </strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">double</span> d =<span class="number">4</span> <span class="number">869.61</span>;</span><br><span class="line">    BigDecimal a1 = <span class="keyword">new</span> BigDecimal(Double.toString(d));</span><br><span class="line">    BigDecimal b1 = <span class="keyword">new</span> BigDecimal(Double.toString(<span class="number">100</span>));  </span><br><span class="line">    BigDecimal result = a1.multiply(b1);<span class="comment">// 相乘结果</span></span><br><span class="line">    System.out.println(result);</span><br><span class="line">    BigDecimal one = <span class="keyword">new</span> BigDecimal(<span class="string">"1"</span>);</span><br><span class="line">    <span class="keyword">double</span> a = result.divide(one,<span class="number">2</span>,BigDecimal.ROUND_HALF_UP).doubleValue();<span class="comment">//保留1位数</span></span><br><span class="line">    System.out.println(a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong> 解决方案三 : </strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">double</span> amt3 = (<span class="keyword">float</span>)amt * <span class="number">100</span>;</span><br></pre></td></tr></table></figure></p><p> <strong> double 转 String </strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">DecimalFormat decimalFormat = <span class="keyword">new</span> DecimalFormat(<span class="string">"###################.###########"</span>);</span><br><span class="line">decimalFormat.format(amt2);</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"-------&gt;amt*10*10:"</span> + amt1); <span class="comment">//-------&gt;amt*10*10:486961.0</span></span><br><span class="line">System.out.println(<span class="string">"-------&gt;amt*100:"</span> + amt2); <span class="comment">//-------&gt;amt*100:486960.99999999994</span></span><br><span class="line">System.out.println(<span class="string">"-------&gt;float:"</span> + amt3); <span class="comment">//float:486961.0</span></span><br><span class="line">System.out.println(<span class="string">"-------&gt;String:"</span> + decimalFormat.format(amt1)); <span class="comment">//486961</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; amt = &lt;span class=&quot;number&quot;&gt;4869.61&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; amt2 = amt * &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.println(amt2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;结果不是预期的&lt;code&gt;486961&lt;/code&gt;,而是&lt;code&gt;486960.99999999994&lt;/code&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Java 使用JAXB 实现 Java 对象转 xml</title>
    <link href="zealotpz.com/2017/02/17/Java-%E4%BD%BF%E7%94%A8JAXB-%E5%AE%9E%E7%8E%B0-Java-%E5%AF%B9%E8%B1%A1%E8%BD%AC-xml/"/>
    <id>zealotpz.com/2017/02/17/Java-使用JAXB-实现-Java-对象转-xml/</id>
    <published>2017-02-17T01:51:37.000Z</published>
    <updated>2017-02-17T02:40:03.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> JDK中JAXB相关的重要Class和Interface：</strong></p><ol><li><p>JAXBContext类，是应用的入口，用于管理XML/Java绑定信息。</p></li><li><p><code>Marshaller</code>接口，将Java对象序列化为XML数据。</p></li><li><p>Unmarshaller接口，将XML数据反序列化为Java对象。</p></li></ol><p><strong> JDK中JAXB相关的重要Annotation：</strong></p><ol><li><code>@XmlType</code>，将Java类或枚举类型映射到XML模式类型</li></ol><a id="more"></a><ol start="2"><li><p>@XmlAccessorType(XmlAccessType.FIELD) ，控制字段或属性的序列化。FIELD表示JAXB将自动绑定Java类中的每个非静态的（static）、非瞬态的（由@XmlTransient标注）字段到XML。其他值还有XmlAccessType.PROPERTY和XmlAccessType.NONE。</p></li><li><p>@XmlAccessorOrder，控制JAXB 绑定类中属性和字段的排序。</p></li><li><p>@XmlJavaTypeAdapter，使用定制的适配器（即扩展抽象类XmlAdapter并覆盖marshal()和unmarshal()方法），以序列化Java类为XML。</p></li><li><p>@XmlElementWrapper ，对于数组或集合（即包含多个元素的成员变量），生成一个包装该数组或集合的XML元素（称为包装器）。</p></li><li><p><code>@XmlRootElement</code>，将Java类或枚举类型映射到XML元素。</p></li><li><p><code>@XmlElement</code>，将Java类的一个属性映射到与属性同名的一个XML元素。</p></li><li><p>@XmlAttribute，将Java类的一个属性映射到与属性同名的一个XML属性。</p></li></ol><p>Java Bean, 通过注解将Java类或枚举类型映射到XML模式类型<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.xml.bind.annotation.XmlElement;</span><br><span class="line"><span class="keyword">import</span> javax.xml.bind.annotation.XmlRootElement;</span><br><span class="line"><span class="keyword">import</span> javax.xml.bind.annotation.XmlType;</span><br><span class="line"></span><br><span class="line"><span class="meta">@XmlRootElement</span>(name = <span class="string">"envelope"</span>) <span class="comment">//指定元素名称</span></span><br><span class="line"><span class="meta">@XmlType</span>(propOrder = &#123;<span class="string">"agentHead"</span>,<span class="string">"agentBody"</span>&#125;) <span class="comment">//指定生成元素顺序</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Envelope</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> AgentHead <span class="title">getAgentHead</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> agentHead;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@XmlElement</span>(name = <span class="string">"head"</span>) <span class="comment">//指定子节点元素名称</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAgentHead</span><span class="params">(AgentHead agentHead)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.agentHead = agentHead;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> AgentBody <span class="title">getAgentBody</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> agentBody;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@XmlElement</span>(name = <span class="string">"body"</span>) <span class="comment">//指定子节点元素名称</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAgentBody</span><span class="params">(AgentBody agentBody)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.agentBody = agentBody;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> AgentHead agentHead;</span><br><span class="line">    <span class="keyword">private</span> AgentBody agentBody;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>Java 对象转 xml 方法,<code>Marshaller</code>实例可设置输出 xml 属性<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Java 对象转 xml</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> object</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">object2Xml</span><span class="params">(Object object)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        StringWriter writer = <span class="keyword">new</span> StringWriter();</span><br><span class="line">        JAXBContext context = JAXBContext.newInstance(object.getClass());</span><br><span class="line">        Marshaller marshal = context.createMarshaller();</span><br><span class="line"></span><br><span class="line">        marshal.setProperty(Marsha实例ller.JAXB_FORMATTED_OUTPUT, <span class="keyword">false</span>); <span class="comment">// 是否格式化输出(即按标签自动换行，false是一行的xml)</span></span><br><span class="line">        marshal.setProperty(Marshaller.JAXB_ENCODING, <span class="string">"UTF-8"</span>);<span class="comment">// 编码格式,默认为utf-8</span></span><br><span class="line">        marshal.setProperty(Marshaller.JAXB_FRAGMENT, <span class="keyword">true</span>);<span class="comment">// 是否省略xml头信息</span></span><br><span class="line">        <span class="comment">//&lt;?xmlversion="1.0"encoding="utf-8"standalone="yes"?&gt;</span></span><br><span class="line">        marshal.setProperty(<span class="string">"jaxb.encoding"</span>, <span class="string">"utf-8"</span>); <span class="comment">//设置编码格式 utf-8</span></span><br><span class="line">        marshal.marshal(object, writer);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> String(writer.getBuffer());</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>按指定格式拼装并生成 xml<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//envelope</span></span><br><span class="line"> Envelope envelope = <span class="keyword">new</span> Envelope();</span><br><span class="line"> <span class="comment">//head</span></span><br><span class="line"> AgentHead agentHead = <span class="keyword">new</span> AgentHead();</span><br><span class="line"> <span class="comment">//head添加子节点</span></span><br><span class="line"> agentpayHead.setVersion(<span class="string">"v1.0"</span>);</span><br><span class="line"> agentpayHead.setCharset(<span class="string">"UTF-8"</span>);</span><br><span class="line"> <span class="comment">//body</span></span><br><span class="line"> AgentBody agentBody = <span class="keyword">new</span> AgentBody();</span><br><span class="line"> <span class="comment">//envelope添加子节点</span></span><br><span class="line"> envelope.setAgentHead(agentHead);</span><br><span class="line"> envelope.setAgentBody(agentBody);</span><br><span class="line"></span><br><span class="line"> <span class="comment">//envelope 节点 转 xml</span></span><br><span class="line">  String envelopeXML = object2Xml(envelope);</span><br><span class="line">  System.out.println(<span class="string">"-----&gt; envelope报文： \n"</span> + envelopeXML);</span><br></pre></td></tr></table></figure></p><p>输出xml如下<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">envelope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>v1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">envelope</span>&gt;</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; JDK中JAXB相关的重要Class和Interface：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;JAXBContext类，是应用的入口，用于管理XML/Java绑定信息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Marshaller&lt;/code&gt;接口，将Java对象序列化为XML数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Unmarshaller接口，将XML数据反序列化为Java对象。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt; JDK中JAXB相关的重要Annotation：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;@XmlType&lt;/code&gt;，将Java类或枚举类型映射到XML模式类型&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="Java,xml,JAXB" scheme="zealotpz.com/tags/Java-xml-JAXB/"/>
    
  </entry>
  
  <entry>
    <title>Java 使用 HttpClient 发送 Post请求(http与https)</title>
    <link href="zealotpz.com/2017/02/09/Java-%E4%BD%BF%E7%94%A8-HttpClient-%E5%8F%91%E9%80%81-Post%E8%AF%B7%E6%B1%82-http-%E4%B8%8E-https/"/>
    <id>zealotpz.com/2017/02/09/Java-使用-HttpClient-发送-Post请求-http-与-https/</id>
    <published>2017-02-09T09:17:39.000Z</published>
    <updated>2017-02-17T01:33:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>HttpClient是Apache Jakarta Common下的子项目，用来提供高效的、最新的、功能丰富的支持HTTP协议的客户端编程工具包，并且它支持HTTP协议最新的版本和建议。HttpClient已经应用在很多的项目中，比如Apache Jakarta上很著名的另外两个开源项目Cactus和HTMLUnit都使用了HttpClient。</p><p>下载地址:  <a href="http://hc.apache.org/downloads.cgi" target="_blank" rel="noopener">http://hc.apache.org/downloads.cgi</a></p><a id="more"></a><p><strong> 发送 http 请求 </strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zealotpz.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.http.HttpEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.NameValuePair;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.config.RequestConfig;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.entity.UrlEncodedFormEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.CloseableHttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpPost;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.CloseableHttpClient;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.HttpClients;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.message.BasicNameValuePair;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.protocol.HTTP;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.util.EntityUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by zealotpz on 2017/2/9.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpClientTest</span> </span>&#123;</span><br><span class="line">    <span class="comment">//设置链接超时和请求超时等参数，否则会长期停止或者崩溃</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> RequestConfig requestConfig = RequestConfig.custom().setSocketTimeout(<span class="number">60000</span>).setConnectTimeout(<span class="number">60000</span>).setConnectionRequestTimeout(<span class="number">60000</span>).build();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">sendPost</span><span class="params">(String url, Map&lt;String, String&gt; params)</span> </span>&#123;</span><br><span class="line">        String responseContent = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//建立HttpPost对象</span></span><br><span class="line">            HttpPost httpPost = <span class="keyword">new</span> HttpPost(url);</span><br><span class="line">            <span class="comment">//建立一个NameValuePair数组，用于存储欲传送的参数</span></span><br><span class="line">            List&lt;NameValuePair&gt; nvps = <span class="keyword">new</span> ArrayList&lt;NameValuePair&gt;();</span><br><span class="line">            <span class="comment">//遍历参数 map,添加参数</span></span><br><span class="line">            <span class="keyword">for</span> (String key : params.keySet()) &#123;</span><br><span class="line">                nvps.add(<span class="keyword">new</span> BasicNameValuePair(key, params.get(key)));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//参数集合传入到一个UrlEncodedFormEntity中并设置编码</span></span><br><span class="line">            httpPost.setEntity(<span class="keyword">new</span> UrlEncodedFormEntity(nvps, HTTP.UTF_8));</span><br><span class="line">            CloseableHttpClient httpClient = HttpClients.custom().setDefaultRequestConfig(requestConfig).build();</span><br><span class="line">            <span class="comment">//发送Post,并返回一个HttpResponse对象</span></span><br><span class="line">            CloseableHttpResponse httpResponse = httpClient.execute(httpPost);</span><br><span class="line">            <span class="comment">//使用响应对象获取响应实</span></span><br><span class="line">            HttpEntity httpEntity = httpResponse.getEntity();</span><br><span class="line">            <span class="keyword">if</span> (httpEntity != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="comment">//将响应实体转为字符串</span></span><br><span class="line">                responseContent = EntityUtils.toString(httpEntity, <span class="string">"UTF-8"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//返回应答字符串</span></span><br><span class="line">        <span class="keyword">return</span> responseContent;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p><strong> 发送 https 请求 </strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zealotpz.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.http.HttpEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.NameValuePair;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.config.RequestConfig;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.entity.UrlEncodedFormEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.CloseableHttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpPost;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.conn.ssl.SSLConnectionSocketFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.conn.ssl.SSLContextBuilder;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.conn.ssl.TrustStrategy;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.conn.ssl.X509HostnameVerifier;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.CloseableHttpClient;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.HttpClients;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.message.BasicNameValuePair;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.protocol.HTTP;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.util.EntityUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.SSLContext;</span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.SSLException;</span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.SSLSession;</span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.SSLSocket;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.security.GeneralSecurityException;</span><br><span class="line"><span class="keyword">import</span> java.security.cert.CertificateException;</span><br><span class="line"><span class="keyword">import</span> java.security.cert.X509Certificate;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by zealotpz on 2017/2/9.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpClientTest</span> </span>&#123;</span><br><span class="line">    <span class="comment">//设置链接超时和请求超时等参数，否则会长期停止或者崩溃</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> RequestConfig requestConfig = RequestConfig.custom().setSocketTimeout(<span class="number">60000</span>).setConnectTimeout(<span class="number">60000</span>).setConnectionRequestTimeout(<span class="number">60000</span>).build();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">sendHttpsPost</span><span class="params">(String url, Map&lt;String, String&gt; params)</span> </span>&#123;</span><br><span class="line">        String responseContent = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            HttpPost httpPost = <span class="keyword">new</span> HttpPost(url);</span><br><span class="line">            List&lt;NameValuePair&gt; nvps = <span class="keyword">new</span> ArrayList&lt;NameValuePair&gt;();</span><br><span class="line">            <span class="keyword">for</span> (String key : params.keySet()) &#123;</span><br><span class="line">                nvps.add(<span class="keyword">new</span> BasicNameValuePair(key, params.get(key)));</span><br><span class="line">            &#125;</span><br><span class="line">            httpPost.setEntity(<span class="keyword">new</span> UrlEncodedFormEntity(nvps, HTTP.UTF_8));</span><br><span class="line">            CloseableHttpClient httpClient = HttpClients.custom().setSSLSocketFactory(createSSLConnSocketFactory()).setDefaultRequestConfig(requestConfig).build();</span><br><span class="line">            CloseableHttpResponse httpResponse = httpClient.execute(httpPost);</span><br><span class="line">            HttpEntity httpEntity = httpResponse.getEntity();</span><br><span class="line">            <span class="keyword">if</span> (httpEntity != <span class="keyword">null</span>) &#123;</span><br><span class="line">                responseContent = EntityUtils.toString(httpEntity, HTTP.UTF_8);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> responseContent;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建SSL安全连接</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> SSLConnectionSocketFactory <span class="title">createSSLConnSocketFactory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SSLConnectionSocketFactory sslsf = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            SSLContext sslContext = <span class="keyword">new</span> SSLContextBuilder().loadTrustMaterial(<span class="keyword">null</span>, <span class="keyword">new</span> TrustStrategy() &#123;</span><br><span class="line"></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isTrusted</span><span class="params">(X509Certificate[] chain, String authType)</span> <span class="keyword">throws</span> CertificateException </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;).build();</span><br><span class="line">            sslsf = <span class="keyword">new</span> SSLConnectionSocketFactory(sslContext, <span class="keyword">new</span> X509HostnameVerifier() &#123;</span><br><span class="line"></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">verify</span><span class="params">(String arg0, SSLSession arg1)</span> </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">verify</span><span class="params">(String host, SSLSocket ssl)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">verify</span><span class="params">(String host, X509Certificate cert)</span> <span class="keyword">throws</span> SSLException </span>&#123;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">verify</span><span class="params">(String host, String[] cns, String[] subjectAlts)</span> <span class="keyword">throws</span> SSLException </span>&#123;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (GeneralSecurityException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sslsf;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;HttpClient是Apache Jakarta Common下的子项目，用来提供高效的、最新的、功能丰富的支持HTTP协议的客户端编程工具包，并且它支持HTTP协议最新的版本和建议。HttpClient已经应用在很多的项目中，比如Apache Jakarta上很著名的另外两个开源项目Cactus和HTMLUnit都使用了HttpClient。&lt;/p&gt;
&lt;p&gt;下载地址:  &lt;a href=&quot;http://hc.apache.org/downloads.cgi&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://hc.apache.org/downloads.cgi&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java,HttpClient,Post" scheme="zealotpz.com/tags/Java-HttpClient-Post/"/>
    
  </entry>
  
  <entry>
    <title>故乡</title>
    <link href="zealotpz.com/2017/02/06/%E6%95%85%E4%B9%A1/"/>
    <id>zealotpz.com/2017/02/06/故乡/</id>
    <published>2017-02-06T01:12:09.000Z</published>
    <updated>2017-03-01T09:09:15.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 流年如丝，波澜不惊，悄无声息而过 </strong><br><img src="http://oizl4tpho.bkt.clouddn.com//20170301170732_sS9ZiA_双桥.jpeg" alt=""><br><a id="more"></a></p><p>2008年,金融危机,北京奥运会,汶川地震;那年我17,高三,每天麻木的一遍又一遍刷着卷子;</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; 流年如丝，波澜不惊，悄无声息而过 &lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://oizl4tpho.bkt.clouddn.com//20170301170732_sS9ZiA_双桥.jpeg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="故乡" scheme="zealotpz.com/tags/%E6%95%85%E4%B9%A1/"/>
    
  </entry>
  
  <entry>
    <title>Mysql查询并删除重复数据(多字段)</title>
    <link href="zealotpz.com/2017/01/24/Mysql%E6%9F%A5%E8%AF%A2%E5%B9%B6%E5%88%A0%E9%99%A4%E9%87%8D%E5%A4%8D%E6%95%B0%E6%8D%AE(%E5%A4%9A%E5%AD%97%E6%AE%B5)/"/>
    <id>zealotpz.com/2017/01/24/Mysql查询并删除重复数据(多字段)/</id>
    <published>2017-01-24T02:05:46.000Z</published>
    <updated>2017-01-24T07:11:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>一个表内两个字段应该加上unique约束,但由于表设计不周,未加唯一约束导致表中出现大量重复数据</p><h4 id="查询重复记录"><a href="#查询重复记录" class="headerlink" title="查询重复记录"></a>查询重复记录</h4><p>根据<code>userName, userAge, sex</code>查询user表中 的重复记录,即姓名,年龄,性别均相同的用户数据<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> userName, userAge, sex <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">group</span> <span class="keyword">by</span> userName, userAge, sex <span class="keyword">having</span> <span class="keyword">count</span>(*) &gt; <span class="number">1</span></span><br></pre></td></tr></table></figure></p><a id="more"></a><h4 id="删除重复记录"><a href="#删除重复记录" class="headerlink" title="删除重复记录"></a>删除重复记录</h4><p>根据3个字段删除表中重复数据(<code>删除前请备份!</code>)<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">WHERE</span> (userName, userAge, sex) <span class="keyword">IN</span></span><br><span class="line">      (<span class="keyword">SELECT</span> userName, userAge, sex <span class="keyword">FROM</span></span><br><span class="line">         (<span class="keyword">SELECT</span> userName, userAge, sex <span class="keyword">FROM</span> <span class="keyword">user</span></span><br><span class="line">          <span class="keyword">GROUP</span> <span class="keyword">BY</span> userName, userAge, sex <span class="keyword">HAVING</span> <span class="keyword">count</span>(*) &gt; <span class="number">1</span>) s1)</span><br><span class="line">      <span class="keyword">AND</span> <span class="keyword">id</span> <span class="keyword">NOT</span> <span class="keyword">IN</span></span><br><span class="line">          (<span class="keyword">SELECT</span> <span class="keyword">id</span> <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> <span class="keyword">id</span> <span class="keyword">FROM</span> <span class="keyword">user</span></span><br><span class="line">                 <span class="keyword">GROUP</span> <span class="keyword">BY</span> userName, userAge, sex <span class="keyword">HAVING</span> <span class="keyword">count</span>(*) &gt; <span class="number">1</span>) s2);</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一个表内两个字段应该加上unique约束,但由于表设计不周,未加唯一约束导致表中出现大量重复数据&lt;/p&gt;
&lt;h4 id=&quot;查询重复记录&quot;&gt;&lt;a href=&quot;#查询重复记录&quot; class=&quot;headerlink&quot; title=&quot;查询重复记录&quot;&gt;&lt;/a&gt;查询重复记录&lt;/h4&gt;&lt;p&gt;根据&lt;code&gt;userName, userAge, sex&lt;/code&gt;查询user表中 的重复记录,即姓名,年龄,性别均相同的用户数据&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; userName, userAge, sex &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;by&lt;/span&gt; userName, userAge, sex &lt;span class=&quot;keyword&quot;&gt;having&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;count&lt;/span&gt;(*) &amp;gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="mysql" scheme="zealotpz.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>返老还童</title>
    <link href="zealotpz.com/2017/01/16/%E8%BF%94%E8%80%81%E8%BF%98%E7%AB%A5/"/>
    <id>zealotpz.com/2017/01/16/返老还童/</id>
    <published>2017-01-16T02:21:04.000Z</published>
    <updated>2017-03-02T07:16:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>『<strong>我们终将会失去我们所爱的人，不然我们怎么会知道他对我们有多重要呢</strong>』<br><img src="http://oizl4tpho.bkt.clouddn.com//20170302151503_C7zDwU_本杰明.jpeg" alt=""><br><a id="more"></a></p><p>这周末看完四部电影『太空旅客』全程看大表姐,『鲨滩』也是全程看女主,『假结婚』霸道女总裁,而『返老还童』看完后又双叒叕怀疑人生了…</p><ul><li><p>我们终将会失去我们所爱的人，不然我们怎么会知道他对我们有多重要呢</p></li><li><p>本杰明二战后归来，黛西俯身向前献上唇瓣。他说他不能。他太老，而她太粉嫩。此时黛西青春尚好，红裙眉眼，肩线菲薄，金色长发泄满一地青春的狂傲和骄躁。女人在自以为青春年少的完美时期高傲不顾一切。感情如同施舍一样随意。</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;『&lt;strong&gt;我们终将会失去我们所爱的人，不然我们怎么会知道他对我们有多重要呢&lt;/strong&gt;』&lt;br&gt;&lt;img src=&quot;http://oizl4tpho.bkt.clouddn.com//20170302151503_C7zDwU_本杰明.jpeg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="琐事,感悟,随笔" scheme="zealotpz.com/tags/%E7%90%90%E4%BA%8B-%E6%84%9F%E6%82%9F-%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>CentOS下shadowsocks一键安装脚本</title>
    <link href="zealotpz.com/2017/01/05/CentOS%E4%B8%8Bshadowsocks%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC/"/>
    <id>zealotpz.com/2017/01/05/CentOS下shadowsocks一键安装脚本/</id>
    <published>2017-01-05T02:24:30.000Z</published>
    <updated>2017-01-05T07:35:51.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 本脚本适用环境：</strong><br>系统支持：CentOS 32 或 64 位<br>内存要求：≥128M<br>日期：<code>2016.11.05</code></p><p><strong> 关于本脚本：</strong><br>一键安装 <code>libev</code> 版的 shadowsocks 最新版本。该版本的特点是内存占用小（600k左右），低 CPU 消耗，甚至可以安装在基于 OpenWRT 的路由器上。<br>友情提示：如果你有问题，请先参考这篇 <a href="https://teddysun.com/399.html" target="_blank" rel="noopener">Shadowsocks Troubleshootin</a>后再问。</p><a id="more"></a><p><strong> 默认配置：</strong><br>服务器端口：自己设定（如不设定，默认为 <code>8989</code>）<br>客户端端口：<code>1080</code><br>密码：自己设定（如不设定，默认为<code>teddysun.com</code>）</p><p><strong> 客户端下载: </strong><br><a href="https://github.com/shadowsocks/shadowsocks-windows/releases" target="_blank" rel="noopener">Windowns -&gt; shadowsocks-windows</a><br><a href="https://github.com/shadowsocks/ShadowsocksX-NG/releases/" target="_blank" rel="noopener">macOS -&gt; ShadowsocksX-NG</a></p><p>推荐使用<a href="https://github.com/shadowsocks/ShadowsocksX-NG" target="_blank" rel="noopener">ShadowsocksX-NG</a>作为客户端,官方版本的Shadowsocks客户端的<code>GWF list</code>基本属于无人维护状态</p><p><strong> 使用方法：</strong><br>使用<code>root</code>用户登录，运行以下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-libev.sh</span><br><span class="line">chmod +x shadowsocks-libev.sh</span><br><span class="line">./shadowsocks-libev.sh 2&gt;&amp;1 | tee shadowsocks-libev.log</span><br></pre></td></tr></table></figure></p><p>如成功安装完成后，脚本提示如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Congratulations, Shadowsocks-libev install completed!</span><br><span class="line">Your Server IP:your_server_ip</span><br><span class="line">Your Server Port:your_server_port</span><br><span class="line">Your Password:your_password</span><br><span class="line">Your Local IP:127.0.0.1</span><br><span class="line">Your Local Port:1080</span><br><span class="line">Your Encryption Method:aes-256-cfb</span><br><span class="line"></span><br><span class="line">Welcome to visit:https://teddysun.com/357.html</span><br><span class="line">Enjoy it!</span><br></pre></td></tr></table></figure></p><p><strong> 卸载方法：</strong><br>使用<code>root</code>用户登录，运行以下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./shadowsocks-libev.sh uninstall</span><br></pre></td></tr></table></figure></p><p>安装完成后即已后台启动 <code>Shadowsocks-libev</code> ，运行：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/shadowsocks status</span><br></pre></td></tr></table></figure></p><p>可以查看进程是否启动。<br>本脚本安装完成后，会将 Shadowsocks-libev 加入<code>开机自启动</code></p><p><strong> 配置文件路径：</strong> <code>/etc/shadowsocks.json</code><br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"server"</span>:<span class="string">"0.0.0.0"</span>,</span><br><span class="line">    <span class="attr">"server_port"</span>:<span class="number">8989</span>,</span><br><span class="line">    <span class="attr">"local_address"</span>:<span class="string">"127.0.0.1"</span>,</span><br><span class="line">    <span class="attr">"local_port"</span>:<span class="number">1080</span>,</span><br><span class="line">    <span class="attr">"password"</span>:<span class="string">"yourpassword"</span>,</span><br><span class="line">    <span class="attr">"timeout"</span>:<span class="number">300</span>,</span><br><span class="line">    <span class="attr">"method"</span>:<span class="string">"aes-256-cfb"</span>,</span><br><span class="line">    <span class="attr">"fast_open"</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong> 使用命令 </strong><br><code>启动</code>：/etc/init.d/shadowsocks start<br><code>停止</code>：/etc/init.d/shadowsocks stop<br><code>重启</code>：/etc/init.d/shadowsocks restart<br><code>查看状态</code>：/etc/init.d/shadowsocks status</p><p>转自：<a href="https://teddysun.com/342.html" target="_blank" rel="noopener">https://teddysun.com/342.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; 本脚本适用环境：&lt;/strong&gt;&lt;br&gt;系统支持：CentOS 32 或 64 位&lt;br&gt;内存要求：≥128M&lt;br&gt;日期：&lt;code&gt;2016.11.05&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; 关于本脚本：&lt;/strong&gt;&lt;br&gt;一键安装 &lt;code&gt;libev&lt;/code&gt; 版的 shadowsocks 最新版本。该版本的特点是内存占用小（600k左右），低 CPU 消耗，甚至可以安装在基于 OpenWRT 的路由器上。&lt;br&gt;友情提示：如果你有问题，请先参考这篇 &lt;a href=&quot;https://teddysun.com/399.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Shadowsocks Troubleshootin&lt;/a&gt;后再问。&lt;/p&gt;
    
    </summary>
    
    
      <category term="shadowsocks,ss,centOS" scheme="zealotpz.com/tags/shadowsocks-ss-centOS/"/>
    
  </entry>
  
  <entry>
    <title>2016 end-of-year</title>
    <link href="zealotpz.com/2016/12/30/2016-end-of-year/"/>
    <id>zealotpz.com/2016/12/30/2016-end-of-year/</id>
    <published>2016-12-30T14:05:42.000Z</published>
    <updated>2017-02-15T01:47:04.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 那些一事无成的人，往往并非一无是处，而是有太多的退路 </strong><br><a id="more"></a></p><p><code>先占坑...</code><br><strong>工作</strong><br>跳了一次槽,离开呆了快3年的创业公司,股份没了<br>回到杭州,工资翻了一倍<br>项目做了公共自行车、汽车充电桩、支付平台等<br>修复了几百个Bug<br>只读完了一本书<br>用swift做了个小应用</p><p><strong>买买买</strong><br>买了种草许久的 PS4<br>凑齐了 Apple 四件套<br>买了烤箱及一大堆烘焙工具<br>买了适马17-50,三脚架<br>从小就一直想买的 EVA 初号机手办!</p><p><strong>生活</strong><br>学会了简单的烘焙,做了蛋糕,布丁,烤鸡翅红薯<br>学会了一些新菜<br>快门数到了4300+,可惜依然没有人像~</p><p>btw,然而还是一条单身狗~</p><hr><p>明年买个 kindle,多读几本书,<br>去旅游几次(办护照办护照!),<br>要开始关注房子了,户口迁到杭州,<br>争取税前能到15-20K,<br>学会一门乐器(尤克里里,🎸),<br>一个月至少写篇文章(随感),<br>恢复锻炼,尝试🏃,</p><p>明年26,或许永远都碰不到怦然心动的人了,但还是想亲手做个生日蛋糕,亲自弹唱小情歌,亲自拍照修图,一起旅行,能像Murad Osmann那样…</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; 那些一事无成的人，往往并非一无是处，而是有太多的退路 &lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="end-of-year" scheme="zealotpz.com/tags/end-of-year/"/>
    
  </entry>
  
  <entry>
    <title>macOS 10.12 Sierra开启HiDPI</title>
    <link href="zealotpz.com/2016/12/23/macOS-10-12-Sierra%E5%BC%80%E5%90%AFHiDPI/"/>
    <id>zealotpz.com/2016/12/23/macOS-10-12-Sierra开启HiDPI/</id>
    <published>2016-12-23T13:42:10.000Z</published>
    <updated>2017-01-03T02:59:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>MacBook Pro 升级macOS 10.12 Sierra系统后外接2K 显示器无法开启HiDPI,<br>之前在Mac OS X 10.11 El Capitan下的几个方法均失效:</p><ul><li>使用<code>SwitchResX</code><br>按照 知乎: <a href="https://www.zhihu.com/question/35300978/answer/68752378" target="_blank" rel="noopener">https://www.zhihu.com/question/35300978/answer/68752378</a> 回答操作, 关闭SIP后选择<br>1920*1080分辨率即可</li><li>使用<code>RDM</code><br>按照 Github: <a href="https://github.com/syscl/Enable-HiDPI-OSX" target="_blank" rel="noopener">https://github.com/syscl/Enable-HiDPI-OSX</a> 的流程,执行<code>enable-HiDPI.sh</code>后用 RDM选择1920*1080分辨率即可<a id="more"></a>后根据 <a href="https://www.zhihu.com/question/35300978/answer/126332986" target="_blank" rel="noopener">https://www.zhihu.com/question/35300978/answer/126332986</a> 成功开启</li></ul><p><strong> 流程如下: </strong><br>1.如已安装,卸载SwitchResX,并在<code>系统偏好设置</code>内移除设置面板<br>2.重启电脑,开机按<code>CMD+R</code>进入恢复模式,进入终端后输入<code>csrutil disable</code>关闭SIP<br>3.官网 <a href="http://www.madrau.com/" target="_blank" rel="noopener">http://www.madrau.com/</a> 下载 最新版<code>SwitchResX4.zip</code>,选择<code>为电脑上所有用户安装!</code><br>4.新建一个管理员角色,如 test<br>5.注销当前用户,用 test 用户登录,用10.11 El Capitan下的方法新建<code>3840*2160</code>分辨率即可,后续操作相同<br>6.删除 test 用户,开启 SIP</p><p><strong><em> <code>注意事项</code>: </em></strong></p><ul><li>请尽量使用 <code>DP线</code>.</li><li>如SwitchResX 中的<code>Custom Resolutions</code>界面<code>+</code>号为灰色,请检查<code>SIP</code>是否成功关闭.</li><li><code>Scaled resolution</code> 中设置的分辨率应为 HiPDI 的<code>2</code>倍,如1920x1080(HiDPI)设置为3840x2160</li><li>操作正常,但重启后仍显示<code>not installed</code>,请检查SwitchResX是否付费.</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MacBook Pro 升级macOS 10.12 Sierra系统后外接2K 显示器无法开启HiDPI,&lt;br&gt;之前在Mac OS X 10.11 El Capitan下的几个方法均失效:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用&lt;code&gt;SwitchResX&lt;/code&gt;&lt;br&gt;按照 知乎: &lt;a href=&quot;https://www.zhihu.com/question/35300978/answer/68752378&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.zhihu.com/question/35300978/answer/68752378&lt;/a&gt; 回答操作, 关闭SIP后选择&lt;br&gt;1920*1080分辨率即可&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;RDM&lt;/code&gt;&lt;br&gt;按照 Github: &lt;a href=&quot;https://github.com/syscl/Enable-HiDPI-OSX&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/syscl/Enable-HiDPI-OSX&lt;/a&gt; 的流程,执行&lt;code&gt;enable-HiDPI.sh&lt;/code&gt;后用 RDM选择1920*1080分辨率即可
    
    </summary>
    
    
      <category term="macOS 10.12,Sierra,HiDPI,SwitchResX" scheme="zealotpz.com/tags/macOS-10-12-Sierra-HiDPI-SwitchResX/"/>
    
  </entry>
  
  <entry>
    <title>Spring MVC 请求中文乱码</title>
    <link href="zealotpz.com/2016/11/30/Spring-MVC-%E8%AF%B7%E6%B1%82%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/"/>
    <id>zealotpz.com/2016/11/30/Spring-MVC-请求中文乱码/</id>
    <published>2016-11-30T03:38:25.000Z</published>
    <updated>2016-12-02T09:22:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近在用 Spring MVC编写 restful 接口的时候发现,如果直接通过浏览器直接访问,后台不能正确的接受中文 url 参数,整理了如下几种方法:</p><h4 id="1-Tomcat-可以直接配置-URIEconding-quot-UTF-8-quot"><a href="#1-Tomcat-可以直接配置-URIEconding-quot-UTF-8-quot" class="headerlink" title="1.Tomcat 可以直接配置 URIEconding=&quot;UTF-8&quot;"></a>1.Tomcat 可以直接配置 <code>URIEconding=&quot;UTF-8&quot;</code></h4><p>在<code>/conf/server.xml</code>中增加编码<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">"8080"</span> <span class="attr">protocol</span>=<span class="string">"HTTP/1.1"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">connectionTimeout</span>=<span class="string">"20000"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">redirectPort</span>=<span class="string">"8443"</span> <span class="attr">URIEncoding</span>=<span class="string">"UTF-8"</span>/&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="2-对参数进行转码"><a href="#2-对参数进行转码" class="headerlink" title="2.对参数进行转码"></a>2.对参数进行转码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> String(<span class="string">"中文"</span>.getBytes(<span class="string">"ISO-8859-1"</span>), <span class="string">"UTF-8"</span>);</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">encodeStr</span><span class="params">(String param)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> String(param.getBytes(<span class="string">"ISO-8859-1"</span>), <span class="string">"UTF-8"</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-将中文使用URLEncoder编码"><a href="#3-将中文使用URLEncoder编码" class="headerlink" title="3.将中文使用URLEncoder编码"></a>3.将中文使用<code>URLEncoder</code>编码</h4><p>如：<a href="http://baidu.com/s?wd=%e7%a5%9e%e7%a7%98%e6%b5%b7%e5%9f%9f" target="_blank" rel="noopener">baidu.com/s?wd=%e7%a5%9e%e7%a7%98%e6%b5%b7%e5%9f%9f</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在用 Spring MVC编写 restful 接口的时候发现,如果直接通过浏览器直接访问,后台不能正确的接受中文 url 参数,整理了如下几种方法:&lt;/p&gt;
&lt;h4 id=&quot;1-Tomcat-可以直接配置-URIEconding-quot-UTF-8-quot&quot;&gt;&lt;a href=&quot;#1-Tomcat-可以直接配置-URIEconding-quot-UTF-8-quot&quot; class=&quot;headerlink&quot; title=&quot;1.Tomcat 可以直接配置 URIEconding=&amp;quot;UTF-8&amp;quot;&quot;&gt;&lt;/a&gt;1.Tomcat 可以直接配置 &lt;code&gt;URIEconding=&amp;quot;UTF-8&amp;quot;&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;在&lt;code&gt;/conf/server.xml&lt;/code&gt;中增加编码&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;Connector&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;port&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;8080&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;protocol&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;HTTP/1.1&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;               &lt;span class=&quot;attr&quot;&gt;connectionTimeout&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;20000&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;               &lt;span class=&quot;attr&quot;&gt;redirectPort&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;8443&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;URIEncoding&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;2-对参数进行转码&quot;&gt;&lt;a href=&quot;#2-对参数进行转码&quot; class=&quot;headerlink&quot; title=&quot;2.对参数进行转码&quot;&gt;&lt;/a&gt;2.对参数进行转码&lt;/h4&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; String(&lt;span class=&quot;string&quot;&gt;&quot;中文&quot;&lt;/span&gt;.getBytes(&lt;span class=&quot;string&quot;&gt;&quot;ISO-8859-1&quot;&lt;/span&gt;), &lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Spring MVC" scheme="zealotpz.com/tags/Spring-MVC/"/>
    
  </entry>
  
  <entry>
    <title>hexo 常用命令</title>
    <link href="zealotpz.com/2016/11/15/hexo-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>zealotpz.com/2016/11/15/hexo-常用命令/</id>
    <published>2016-11-15T07:40:02.000Z</published>
    <updated>2016-11-15T07:47:42.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line"><span class="comment"># 编译生成静态文件</span></span><br><span class="line">hexo d</span><br><span class="line"><span class="comment"># 部署博客</span></span><br><span class="line">hexo g -d</span><br><span class="line"><span class="comment"># g 跟 d 一起使用</span></span><br><span class="line">hexo clean</span><br><span class="line"><span class="comment"># 清除以前生成的静态文件。</span></span><br><span class="line"><span class="comment"># 通常，清理一下可以解决大多数问题。</span></span><br><span class="line">hexo s</span><br><span class="line"><span class="comment"># 本地预览博客</span></span><br><span class="line">hexo new xxx</span><br><span class="line"><span class="comment"># 新建一篇标题为xxx的文章</span></span><br><span class="line">hexo new draft xxx</span><br><span class="line"><span class="comment"># 新建一篇标题为xxx的草稿</span></span><br><span class="line">hexo new page xxx</span><br><span class="line"><span class="comment"># 新建一个页面</span></span><br><span class="line">hexo <span class="built_in">help</span></span><br><span class="line"><span class="comment">#查看帮助</span></span><br></pre></td></tr></table></figure><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo g&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 编译生成静态文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 部署博客&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo g -d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# g 跟 d 一起使用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo clean&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 清除以前生成的静态文件。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 通常，清理一下可以解决大多数问题。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 本地预览博客&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo new xxx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 新建一篇标题为xxx的文章&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo new draft xxx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 新建一篇标题为xxx的草稿&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo new page xxx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 新建一个页面&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo &lt;span class=&quot;built_in&quot;&gt;help&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#查看帮助&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="zealotpz.com/tags/hexo/"/>
    
  </entry>
  
</feed>
